AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a VPC infrastructure for a multi-AZ, multi-tier deployment of a Windows based Application infrastructure. It deploys a managed
  Microsoft AD Directory Service into private subnets in separate Availability Zones inside a VPC, as well as Remote Desktop Gateway instances and
  managed NAT gateways into the public subnet for each Availability Zone. Amazon WorkSpace and RADIUS server will be launched in the selected subnets. Ensure the selected Availability Zones are supported by Amazon WorkSpaces. 
  The default Domain Administrator user is 'admin'. This is the user a WorkSpace will be created for. **WARNING** This template creates Amazon EC2 Windows instances, WorkSpace, RDS Cluster & other related resources. You will be billed for the AWS resources used if you
  create a stack from this template. (qs-1t9sl8r1u)
Metadata:
  QuickStartDocumentation:
    EntrypointName: 'Parameters for deploying AWS Managed Microsoft AD into a new VPC'
    Order: '1'
  cfn-lint:
    config:
      ignore_checks:
        - E9101
        - W9006
        - E0002
        - W9001
      ignore_reason:
        - "Execution part SSM Automation"
        - "Referenced file does not have parameter, "
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - AvailabilityZones
          - NumberOfAZs
          - VPCCIDR
          - DHCPOptionSet
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Microsoft Active Directory configuration
        Parameters:
          - DomainDNSName
          - DomainNetBIOSName
          - DomainAdminPassword
          - NonWindowsDomainJoin
          - ADEdition
      - Label:
          default: Microsoft Windows Server management instance
        Parameters:
          - MgmtServer
          - MgmtServerInstanceType
          - MgmtDataDriveSizeGiB
          - MgmtServerNetBIOSName
          - MgmtServerEnableAdvancedAudtingandMetrics
      - Label:
          default: Microsoft Active Directory Certificate Services configuration
        Parameters:
          - PKI
          - CaServerInstanceType
          - CaDataDriveSizeGiB
          - OrCaServerNetBIOSName
          - EntCaServerNetBIOSName
          - CaKeyLength
          - CaHashAlgorithm
          - OrCaValidityPeriodUnits
          - CaValidityPeriodUnits
          - UseS3ForCRL
          - S3CRLBucketName
      - Label:
          default: Microsoft Remote Desktop Gateway Configuration
        Parameters:
          - NumberOfRDGWHosts
          - RDGWInstanceType
          - RDGWCIDR
      - Label:
          default: WorkSpaces and WorkSpaces Directory Configuration.
        Parameters:
          - DomainUser
          - Tenancy
          - EnableSelfService
          - EnableWorkDocs
          - BundleId
          - ComputeTypeName
          - RunningMode
          - UserVolumeEncryptionEnabled
          - RootVolumeEncryptionEnabled
          - VolumeEncryptionKey
          - UserVolumeSizeGib
          - RootVolumeSizeGib
      - Label:
          default: RADIUS Database and Server Configuration.
        Parameters:
          - LinOTPDBName
          - LinOTPAdminPassword
          - LinOTPReamlName
          - RADIUSServerInstanceType
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
      - Label:
          default: SNS/KMS configurations
        Parameters:
          - QuickStartAdminEmail
    ParameterLabels:
      ADEdition:
        default: AWS Managed Microsoft AD Edition
      AvailabilityZones:
        default: Availability Zones
      CaDataDriveSizeGiB:
        default: CA Data Drive Size
      CaHashAlgorithm:
        default: CA Hash Algorithm
      CaKeyLength:
        default: CA Key Length
      CaServerInstanceType:
        default: CA Instance Type
      CaValidityPeriodUnits:
        default: Enterprise Root or Subordinate CA Certificate Validity Period in Years
      DHCPOptionSet:
        default: Create a DHCP Options set
      DomainAdminPassword:
        default: Admin Account Password
      DomainDNSName:
        default: Domain DNS Name
      DomainNetBIOSName:
        default: Domain NetBIOS Name
      EntCaServerNetBIOSName:
        default: Enterprise Root or Subordinate CA NetBIOS Name
      KeyPairName:
        default: Key Pair Name
      MgmtDataDriveSizeGiB:
        default: Data Drive Size
      MgmtServer:
        default: Deploy Management Server
      MgmtServerEnableAdvancedAudtingandMetrics:
        default: Advanced Auditing and Metrics
      MgmtServerInstanceType:
        default: Management Server Instance Type
      MgmtServerNetBIOSName:
        default: Management Server NetBIOS Name
      NonWindowsDomainJoin:
        default: Whether to create an AD user with minimum permissions that can be used by non-Windows instances to join the domain
      NumberOfAZs:
        default: Number of Availability Zones
      NumberOfRDGWHosts:
        default: Number of RDGW Hosts
      OrCaServerNetBIOSName:
        default: Offline Root CA NetBIOS Name (Only Used For Two Tier PKI)
      OrCaValidityPeriodUnits:
        default: Offline Root CA Certificate Validity Period in Years (Only Used For Two Tier PKI)
      PKI:
        default: Deploy PKI Infrastructure
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: (Optional) Private Subnet 3 CIDR
      PublicSubnet1CIDR:
        default: Public Subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public Subnet 2 CIDR
      PublicSubnet3CIDR:
        default: (Optional) Public Subnet 3 CIDR
      DomainUser:
        default: Domain Admin User
      Tenancy:
        default: WorkSpaces VPC Tenancy
      BundleId:
        default: Enter the WorkSpace BundleID you want to use
      ComputeTypeName:
        default: 'Select the Workspaces Compute type. NOTE: Ensure the BundleId supports the compute type selected'
      RunningMode:
        default: WorkSpaces running mode
      UserVolumeEncryptionEnabled:
        default: Encrypt WorkSpace user volume
      RootVolumeEncryptionEnabled:
        default: Encrypt WorkSpace user volume
      VolumeEncryptionKey:
        default: Enter the WorkSpace KMS key to encrypt volumes 
      UserVolumeSizeGib:
        default: Size of the user volume storage for WorkSpace
      RootVolumeSizeGib:
        default: Size of the root volume storage for WorkSpace
      LinOTPDBName:
        default: Database Name for LinOTP configuration 
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      RDGWCIDR:
        default: Allowed Remote Desktop Gateway External Access CIDR
      RDGWInstanceType:
        default: Remote Desktop Gateway Instance Type
      S3CRLBucketName:
        default: CA CRL S3 Bucket Name
      UseS3ForCRL:
        default: Use S3 for CA CRL Location
      VPCCIDR:
        default: VPC CIDR
      QuickStartAdminEmail:
        default: The QuickStart Admin Email that notification will be sent to upon Successful creation
Parameters:
  ADEdition:
    AllowedValues:
      - Standard
      - Enterprise
    Default: Enterprise
    Description: The AWS Managed Microsoft AD Edition you wish to deploy
    Type: String
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note, The logical order is preserved and only 2 AZs are used for this deployment. You must choose Availability Zones supported by Amazon WorkSpaces.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  CaDataDriveSizeGiB:
    Default: '2'
    Description: Size of the data drive in GiB for the CA instance(s)
    Type: Number
  CaHashAlgorithm:
    AllowedValues:
      - SHA256
      - SHA384
      - SHA512
    Default: SHA256
    Description: CA(s) Hash Algorithm for Signing Certificates
    Type: String
  CaKeyLength:
    AllowedValues:
      - '2048'
      - '4096'
    Default: '2048'
    Description: CA(s) Cryptographic Provider Key Length
    Type: String
  CaServerInstanceType:
    AllowedValues:
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
    Default: t3.medium
    Description: Amazon EC2 instance type for the CA instance(s)
    Type: String
  CaValidityPeriodUnits:
    Default: '5'
    Description: Validity Period in Years
    Type: String
  DHCPOptionSet:
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: Do you want to create and apply a new DHCP Options Set
    Type: String
  DomainAdminPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the Admin user account. Must be at least 8 characters containing letters, numbers and symbols
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  DomainDNSName:
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'
    Default: example.com
    Description: Fully qualified domain name (FQDN) of the forest root domain e.g. example.com
    MaxLength: '255'
    MinLength: '2'
    Type: String
  DomainNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: example
    Description: NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. EXAMPLE
    MaxLength: '15'
    MinLength: '1'
    Type: String
  EntCaServerNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: ENTCA1
    Description: NetBIOS name of the Enterprise Root or Subordinate CA server (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  MgmtDataDriveSizeGiB:
    Default: '2'
    Description: Size of the Managment Server Data Drive in GiB
    Type: Number
  MgmtServer:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Do you want to deploy a Management Server
    Type: String
  MgmtServerEnableAdvancedAudtingandMetrics:
    Description: Enable advanced auditing and metrics and upload them to CloudWatch using the Amazon Kinesis Agent for Microsoft Windows
    AllowedValues:
      - 'true'
      - 'false'
    Type: String
    Default: 'false'
  MgmtServerInstanceType:
    AllowedValues:
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
    Default: t3.medium
    Description: Amazon EC2 instance type for the Management Server
    Type: String
  MgmtServerNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: MGMT1
    Description: NetBIOS name of the Management Server server (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
  NonWindowsDomainJoin:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: |
      Do you want to create an AD User with minimal permissions allowing non-Windows instances to join the domain?
      The username and password will be stored in Secrets Manager and a policy to access the secret will be created.
    Type: String
  NumberOfAZs:
    AllowedValues:
      - '2'
      - '3'
    Default: '2'
    Description: Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter
    Type: String
  NumberOfRDGWHosts:
    AllowedValues:
      - '0'
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '1'
    Description: Enter the number of Remote Desktop Gateway instances to create
    Type: String
  OrCaServerNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: ORCA1
    Description: NetBIOS name of the Offline Root CA server (Only Used For Two Tier PKI) (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
  OrCaValidityPeriodUnits:
    Default: '10'
    Description: Validity Period in Years (Only Used For Two Tier PKI)
    Type: String
  PKI:
    AllowedValues:
      - One-Tier
      - Two-Tier
      - 'No'
    Default: 'No'
    Description: Deploy Two Tier (Offline Root with Subordinate Enterprise CA) or One Tier (Enterprise Root CA) PKI Infrastructure
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PrivateSubnet3CIDR:
    Default: ''
    Description: CIDR block for private subnet 3 located in Availability Zone 3
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR Block for the public subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: CIDR Block for the public subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet3CIDR:
    Default: ''
    Description: CIDR Block for the public subnet 3 located in Availability Zone 3
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)
    Type: String
  QSS3BucketRegion:
    Default: us-east-1
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)
    Default: quickstart-freeradius-mfa-workspaces/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)
    Type: String
  RDGWCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Default: 10.0.0.0/16
    Description: Allowed CIDR Block for external access to the Remote Desktop Gateways
    Type: String
  RDGWInstanceType:
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t3.small
      - t3.medium
      - t3.large
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
    Default: t3.large
    Description: Amazon EC2 instance type for the Remote Desktop Gateway instances
    Type: String
  S3CRLBucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Default: examplebucket
    Description: S3 bucket name for CA CRL(s) storage. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)
    Type: String
  UseS3ForCRL:
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
    Description: Store CA CRL(s) in an S3 bucket
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR Block for the VPC
    Type: String

## WorkSpaces Configuration
  DomainUser:
    Default: Admin
    Description: Domain Admin User
    Type: String
  Tenancy:
    AllowedValues:
      - 'DEDICATED'
      - 'SHARED'
    Default: 'SHARED'
    Description: WorkSpace directory is dedicated or shared. To use Bring Your Own License (BYOL) images, this value must be set to DEDICATED and your Amazon Web Services account must be enabled for BYOL. If your account has not been enabled for BYOL, you will receive an InvalidParameterValuesException error
    Type: String
  EnableWorkDocs:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Indicates whether Amazon WorkDocs is enabled or disabled. If you have enabled this parameter and WorkDocs is not available in the Region, you will receive an OperationNotSupportedException error. Set EnableWorkDocs to disabled, and try again
    Type: String
  EnableSelfService:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Indicates whether self-service capabilities are enabled or disabled
    Type: String
  RootVolumeEncryptionEnabled:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Indicates whether the data stored on the root volume is encrypted.
    Type: String
  UserVolumeEncryptionEnabled:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Indicates whether the data stored on the user volume is encrypted.
    Type: String
  VolumeEncryptionKey:
    Type: String
    Default: alias/aws/workspaces
    Description: The symmetric AWS KMS key used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric KMS keys. you must specify the KMS Key ID you want to use.
  RootVolumeSizeGib:
    Default: '80'
    Description: The size of the user storage. See here allowed user/root volume mappings - https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html#change_volume_sizes
    Type: Number
  UserVolumeSizeGib:
    Default: '50'
    Description: The size of the user storage. See here allowed user/root volume mappings - https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html#change_volume_sizes
    Type: Number
  BundleId:
    Default: 'wsb-gm4d5tx2v'
    AllowedPattern: '^wsb-[0-9a-z]{8,63}$'
    Description: The identifier of the bundle for the WorkSpace. You can use DescribeWorkspaceBundles to list the available bundles.
    Type: String
  ComputeTypeName:
    Default: 'PERFORMANCE'
    AllowedValues:
      - VALUE
      - STANDARD
      - POWERPRO
      - POWER
      - PERFORMANCE
      - GRAPHICSPRO
      - GRAPHICS
    Description: The compute type valid values are - VALUE | STANDARD | PERFORMANCE | POWER | GRAPHICS | POWERPRO | GRAPHICSPRO
    Type: String
  RunningMode:
    Default: 'AUTO_STOP'
    AllowedValues:
      - ALWAYS_ON
      - AUTO_STOP
    Description: Select the Workspaces running mode
    Type: String  

  ## RADIUS Server Configuration
  RADIUSServerInstanceType:
    AllowedValues:
      - t2.medium
      - t3.medium
      - t2.large
      - t3.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
    Default: t3.large
    Description: Amazon EC2 instance type for the RADIUS Server
    Type: String
  LinOTPDBName:
    Type: String
    Default: LINOTP
    Description: Specify an RDS Database name.
  LinOTPAdminPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the account used to manage user enrollment, management of LinOTP portal. Must be at least 8 characters containing letters, numbers and symbols
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  LinOTPReamlName:
    Default: WSRealm
    AllowedPattern: '[a-zA-Z0-9]*'
    Description: Realm Name for LinOTP/LDAP Integration. Default Name set to WSRealm.
    MaxLength: '12'
    MinLength: '5'
    NoEcho: 'true'
    Type: String

  ## SNS Configuration    
  QuickStartAdminEmail:
    Default: workspace@example.com
    Description: 'The QuickStart Admin Email that notification will be sent to upon Successful creation'
    Type: String
    AllowedPattern: '[^@]+@[^@]+\.[^@]+'
    

Conditions:
  IncludeRDGW: !Not [!Equals [!Ref NumberOfRDGWHosts, '0']]
  IsTwoAz: !Equals [!Ref NumberOfAZs, '2']
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  ShouldCreateMgmtServer: !Equals [!Ref MgmtServer, 'true']
  ShouldCreateNonWindowsDomainJoinADUser: !Equals [!Ref NonWindowsDomainJoin, 'true']
  ShouldCreateOneTierPkiResource: !Equals [!Ref PKI, 'One-Tier']
  ShouldCreateTwoTierPkiResource: !Equals [!Ref PKI, 'Two-Tier']
  WorkSpaceEncryptRootVol: !Equals [!Ref RootVolumeEncryptionEnabled, 'true']
  WorkSpaceEncryptUserVol: !Equals [!Ref UserVolumeEncryptionEnabled, 'true']
  KMSVolEncrptionCheck: !And [ Condition: WorkSpaceEncryptRootVol, Condition: WorkSpaceEncryptUserVol]
Rules:
  NonWindowsDomainJoin:
    RuleCondition: !Equals [!Ref NonWindowsDomainJoin, 'true']
    Assertions:
      - AssertDescription: To enable creation of an AD user for non-Windows Domain joins, you need to create a Management Server Instance
        Assert: !Equals [!Ref MgmtServer, 'true']
  S3CRLBucketNameValidation:
    RuleCondition: !And
      - !Equals [!Ref UseS3ForCRL, 'Yes']
      - !Not [!Equals [!Ref PKI, 'No']]
    Assertions:
      - AssertDescription: CRL BucketName cannot must be valid BucketName
        Assert: !Not [!Equals [!Ref S3CRLBucketName, 'examplebucket']]
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join [',', !Ref AvailabilityZones]
        NumberOfAZs: !If [IsTwoAz, '2', '3']
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3ACIDR: !If [IsTwoAz, !Ref AWS::NoValue, !Ref PrivateSubnet3CIDR]
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PublicSubnet3CIDR: !If [IsTwoAz, !Ref AWS::NoValue, !Ref PublicSubnet3CIDR]
        VPCCIDR: !Ref VPCCIDR
  ADStack:
    DependsOn: VPCStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-activedirectory/templates/ad-3.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        ADEdition: !Ref ADEdition
        CaDataDriveSizeGiB: !Ref CaDataDriveSizeGiB
        CaHashAlgorithm: !Ref CaHashAlgorithm
        CaKeyLength: !Ref CaKeyLength
        CaServerInstanceType: !Ref CaServerInstanceType
        CaValidityPeriodUnits: !Ref CaValidityPeriodUnits
        DHCPOptionSet: !Ref DHCPOptionSet
        DomainAdminPassword: !Ref DomainAdminPassword
        DomainDNSName: !Ref DomainDNSName
        DomainNetBIOSName: !Ref DomainNetBIOSName
        EntCaServerNetBIOSName: !Ref EntCaServerNetBIOSName
        KeyPairName: !Ref KeyPairName
        MgmtDataDriveSizeGiB: !Ref MgmtDataDriveSizeGiB
        MgmtServer: !Ref MgmtServer
        MgmtServerEnableAdvancedAudtingandMetrics: !Ref MgmtServerEnableAdvancedAudtingandMetrics
        MgmtServerInstanceType: !Ref MgmtServerInstanceType
        MgmtServerNetBIOSName: !Ref MgmtServerNetBIOSName
        NonWindowsDomainJoin: !Ref NonWindowsDomainJoin
        OrCaServerNetBIOSName: !Ref OrCaServerNetBIOSName
        OrCaValidityPeriodUnits: !Ref OrCaValidityPeriodUnits
        PKI: !Ref PKI
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-microsoft-activedirectory/'
        S3CRLBucketName: !Ref S3CRLBucketName
        UseS3ForCRL: !Ref UseS3ForCRL
        VPCCIDR: !Ref VPCCIDR
        VPCID: !GetAtt VPCStack.Outputs.VPCID
  RDGWStack:
    Condition: IncludeRDGW
    DependsOn: ADStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-rdgateway/templates/rdgw-domain.template'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DomainAdminPassword: !Ref DomainAdminPassword
        DomainAdminUser: admin
        DomainDNSName: !Ref DomainDNSName
        DomainMemberSGID: !GetAtt ADStack.Outputs.DomainMemberSGID
        DomainNetBIOSName: !Ref DomainNetBIOSName
        KeyPairName: !Ref KeyPairName
        NumberOfRDGWHosts: !Ref NumberOfRDGWHosts
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Sub ${QSS3KeyPrefix}submodules/quickstart-microsoft-rdgateway/
        RDGWCIDR: !Ref RDGWCIDR
        RDGWInstanceType: !Ref RDGWInstanceType
        VPCID: !GetAtt VPCStack.Outputs.VPCID
  Macro:
    Type: AWS::CloudFormation::Macro
    Properties:
      Name: WorkSpaceDefaultRoleMacro
      FunctionName: !GetAtt WSIAMFunc.Arn
  WSIAMFunc:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub ${AWS::StackName}
        Handler: index.handler
        Runtime: python3.8
        Role: !GetAtt LambdaExecutionRole.Arn
        Code:
          ZipFile: |  
            import boto3
            import json
            import logging
            logger = logging.getLogger()
            logger.setLevel(logging.INFO)
            client = boto3.client('iam')
            def handler(event, context):
              try:
                fragment = event['fragment']
                client.get_role(RoleName='workspaces_DefaultRole')
                resp = {'requestId': event['requestId'], 'status': 'success','fragment': fragment}
                return resp      
              except client.exceptions.NoSuchEntityException:
                resources_to_be_modified = {}
                resources_to_be_modified = event['fragment']['Resources']
                resources_to_be_modified['WorkspaceDefaultRole'] = {'Properties':{'RoleName':'workspaces_DefaultRole','Tags':[{'Key':'Created_By','Value':'WorkSpacesQuickstart_SC2'}],'ManagedPolicyArns':['arn:aws:iam::aws:policy/AmazonWorkSpacesServiceAccess','arn:aws:iam::aws:policy/AmazonWorkSpacesSelfServiceAccess'],'AssumeRolePolicyDocument':{'Statement':[{'Action':['sts:AssumeRole'],'Effect':'Allow','Principal':{'Service':['workspaces.amazonaws.com']}}],'Version':'2012-10-17'},'Path':'/'}}
                resources_to_be_modified['WorkspaceDefaultRole']['Type'] = 'AWS::IAM::Role'
                resources_to_be_modified['CleanUpCustomResource']['DependsOn'] = 'WorkspaceDefaultRole'
                event['fragment']['Resources'] = resources_to_be_modified
                resp = {'requestId': event['requestId'], 'status': 'success','fragment': fragment}
                return resp
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: cloudformation.amazonaws.com
      FunctionName: !GetAtt WSIAMFunc.Arn
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName:
          Fn::Sub: ${AWS::StackName}-lambda-execution-role-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
          - Effect: Allow
            Action:
            - iam:GetRole
            Resource:
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*
  KMSAdminRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "KMSAdminRole-${AWS::StackName}-${AWS::Region}"
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:*
              Resource: '*'
          PolicyName: "KMSAdminRole_AssumedRolePolicy"
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - kms.amazonaws.com
            Action: sts:AssumeRole
  SNSTopicKMSKey:
    Metadata:
        cfn-lint:
          config:
            ignore_checks:
              - EIAMPolicyWildcardResource
            ignore_reasons:
              - EIAMPolicyWildcardResource: "Scope is limited to least privilege"
    Type: AWS::KMS::Key
    Properties:
      Description: 'KMS Key for SNS Topic'
      EnableKeyRotation: true
      PendingWindowInDays: 20
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !GetAtt KMSAdminRole.Arn
            Action:
              - 'kms:Create*'
              - 'kms:Describe*'
              - 'kms:Enable*'
              - 'kms:List*'
              - 'kms:Put*'
              - 'kms:Update*'
              - 'kms:Revoke*'
              - 'kms:Disable*'
              - 'kms:Get*'
              - 'kms:Delete*'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:CancelKeyDeletion'
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: !GetAtt SNSDeliveryLambdaExecutionRole.Arn
            Action:
              - 'kms:DescribeKey'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey'
              - 'kms:GenerateDataKeyWithoutPlaintext'
            Resource: '*'
  SNSStackStatusTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${AWS::StackName}-SNS-Topic'
      KmsMasterKeyId: !GetAtt SNSTopicKMSKey.KeyId
      Subscription:
        - Endpoint: !Ref QuickStartAdminEmail
          Protocol: email
  SNSDeliveryLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: sns-delivery-lambda-execution-role-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource:
              - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
            - Effect: Allow
              Action:
               -  sns:Publish
              Resource:
               -  !Sub 'arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-SNS-Topic'
  WorkSpaceStack:
    DependsOn: 
      - ADStack
      - Macro
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/workspace-2.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DirectoryID: !GetAtt 'ADStack.Outputs.DirectoryID'
        DomainDNSName: !Ref 'DomainDNSName'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        VPCCIDR: !Ref 'VPCCIDR'
        PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        ADServer1PrivateIP: !GetAtt 'ADStack.Outputs.ADServer1PrivateIP'
        ADServer2PrivateIP: !GetAtt 'ADStack.Outputs.ADServer2PrivateIP'
        MgmtServerNetBIOSName: !Ref 'MgmtServerNetBIOSName'
        BundleId: !Ref 'BundleId'
        ComputeTypeName: !Ref 'ComputeTypeName'
        RunningMode: !Ref 'RunningMode'
        Tenancy: !Ref 'Tenancy'
        EnableWorkDocs: !Ref 'EnableWorkDocs'
        EnableSelfService: !Ref 'EnableSelfService'
        DomainUser: !Ref 'DomainUser'
        UserVolumeEncryptionEnabled: !Ref UserVolumeEncryptionEnabled
        RootVolumeEncryptionEnabled: !Ref RootVolumeEncryptionEnabled
        VolumeEncryptionKey: !Ref VolumeEncryptionKey
        UserVolumeSizeGib: !Ref UserVolumeSizeGib
        RootVolumeSizeGib: !Ref RootVolumeSizeGib
        SNSDeliveryLambdaExecutionRoleExportName: !Sub '${AWS::StackName}-LambdaSNSPublisherRole'
        SNSStackStatusTopicExportName: !Sub '${AWS::StackName}-SNSStackStatusTopic'
        SNSDeliveryLambdaExecutionRoleExportValue: !GetAtt SNSDeliveryLambdaExecutionRole.Arn
        SNSStackStatusTopicExportValue: !Ref SNSStackStatusTopic
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
  
  RadiusStack:
    DependsOn: 
      - ADStack
      - Macro
      - WorkSpaceStack
      - SNSStackStatusTopic
      - SNSDeliveryLambdaExecutionRole
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/radius-2.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        DomainUser: !Ref 'DomainUser'
        AdminUserSecrets: !GetAtt 'ADStack.Outputs.ADSecretsArn'
        VPCCIDR: !Ref 'VPCCIDR'
        RADIUSServerInstanceType: !Ref 'RADIUSServerInstanceType'
        LinOTPDBName: !Ref 'LinOTPDBName'
        LinOTPAdminPassword: !Ref 'LinOTPAdminPassword'
        LinOTPReamlName: !Ref 'LinOTPReamlName'
        KeyName: !Ref 'KeyPairName'
        SNSDeliveryLambdaExecutionRole: !Sub '${AWS::StackName}-LambdaSNSPublisherRole'
        SNSStackStatusTopic: !Sub '${AWS::StackName}-SNSStackStatusTopic'